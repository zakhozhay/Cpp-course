#include <iostream>
#include <windows.h>
#include <conio.h>
#include <string>
#pragma hdrstop
#pragma argsused

#ifdef _WIN32
#include <tchar.h>
#else
  typedef char _TCHAR;
  #define _tmain main
#endif

#include <stdio.h>

// Реалізація функції, що не повертає значення
void ConsoleOut(std::string line, int quantity)   // Використовується тип даних void. Надалі, через кому, зазначається перелік формальних параметрів функції 
{
	  while (quantity>0) {
		  std::cout<<line<<std::endl;   // Віводиться рядок line, отриманий з основної програми. Кількість повторів виведення зазначаються другим параметром quantity
		  quantity--;
	  }
	  
}

// Реалізація функції, що повертає значення
int SumElementsMassive(int massive[10]) // Задається тип значення, що буде повертатися, им'я функції, перелік формальних параметрів через кому (в даному випадку один параметр)
{
	int summa = 0;
	for (int i = 0; i < 10; i++) {
		summa += massive[i];
	}
	return summa;   // В основну програму повертається значення суми елементів масиву (тип даних змінної повинен відповідати вказаному типу значення, що повертається функцією)
}

int _tmain(int argc, _TCHAR* argv[]) 
{
	SetConsoleOutputCP(1251);

	// Виклик функції, що не повертає значення
	ConsoleOut("Приклад роботи функції, що не повертає значення", 3); // В функцію передаються фактичні параметри: строковий рядок і кількість повторів виведення
																	  // (послідовність фактичних параметрів повністю повинна відповідати послідовності формальних)

	// Приклад використання функції, що повертає значення суми елементів масиву
	int mas[10];
	randomize();
	std::cout<<std::endl<<"\nЗгенерований масив\n";
	for (int i = 0; i < 10; i++) {
		mas[i]=random(100);
		std::cout<<mas[i]<<"\t";
	}
	
	std::cout<<"\nСума елементів масиву: "<<SumElementsMassive(mas); // Виклик функції в яку передається згенерований масив і поврертається сумма його елементів
	getch();
	return 0;
}
