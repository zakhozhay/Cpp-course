#include <iostream>
#include <windows.h>
#include <conio.h>
#include <string>
#include <math.h>
#pragma hdrstop
#pragma argsused

#ifdef _WIN32
#include <tchar.h>
#else
  typedef char _TCHAR;
  #define _tmain main
#endif

#include <stdio.h>

int _tmain(int argc, _TCHAR* argv[]) 
{

	SetConsoleOutputCP(1251);
	
	// Приклад використання структурованого оператору циклу for
	// виведення таблиці символів
	char symbol; // Змінна, що буде містити відповідний символ таблиці
	for (byte code = 0; code < 255; code++) {   // Створюється цикл в якому буде змінюватися значення code від 0 до 255 (увесь діапазон кодів символів)
		symbol = code;  // Для отримання символу по його коду використовується неявне перетворення типу даних byte в char
		std::wcout<<"code = "<<code<<"\t"<<"symbol = "<<symbol<<std::endl; // Виведення коду і відповідного символу по одній комбінації в рядку (за одне виконання тіла циклу)
	}

	// Приклад використання структурованого оператору циклу while
	// для генерації заданої кількості випадкових чисел
	int quantity; // Декларація змінної, що буде визначати кількість випадкових чисел для генерації
	std::wcout<<"Введіть кількість випадкових чисел для генерації: ";
	std::wcin>>quantity; // Запит у користувача на введенння кількості випадкових чисел для генерації
	int digit = 1; // створення змінної для зберігання поточного індексу випадкового числа, що генерується
	while (digit <= quantity) { // Цикл буде повторюватися до тих пір доки поточний індекс є меньшим або дорівнює заданої кількості випадкових чисел
		std::wcout<<"Число "<<digit<<" = "<<random(65535)<<std::endl; // Виведення поточного індексу числа, що генерується та самого числа, що повертається з математичної функції random, яка генерує випадкове число
		digit++;		
	}

	// Приклад використання структурованого оператору циклу while
	// для генерації заданої кількості випадкових чисел
	std::wcout<<"Введіть кількість випадкових чисел для генерації: ";
	std::wcin>>quantity;
	digit = 1;
	do {
		std::wcout<<"Число "<<digit<<" = "<<random(65535)<<std::endl;
		digit++; 
	}
	while (digit <= quantity);
	// Для наочного представлення відмінності між структурою з передумовою (while) і постумовою (do while)
	// запустіть програму і для обох запитів на введення кількості випадкових чисел для генерації введіть 0.
	// При цьому, умова продовження циклу, ще напочатку уиклів, не виконується. Цикл while одразу перевіряє
	// невідповідність умови та не генерує жодного числа, а цикл do while сопочатку перший раз виконує, а потім вже перевіряє.
	// Таким чином, бачимо що при використанні do while цикл завжди хоча би раз виконується.  	
	getch();
	return 0;
}
